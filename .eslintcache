[{"/home/vitaliy/work/react-redux-typescript/src/index.tsx":"1","/home/vitaliy/work/react-redux-typescript/src/reducers/notesReducer.ts":"2","/home/vitaliy/work/react-redux-typescript/src/components/App.tsx":"3","/home/vitaliy/work/react-redux-typescript/src/components/NewNoteInput.tsx":"4","/home/vitaliy/work/react-redux-typescript/src/containers/store.ts":"5","/home/vitaliy/work/react-redux-typescript/src/actions/notes.ts":"6","/home/vitaliy/work/react-redux-typescript/src/components/Note.tsx":"7"},{"size":357,"mtime":1610951199517,"results":"8","hashOfConfig":"9"},{"size":858,"mtime":1610956517571,"results":"10","hashOfConfig":"9"},{"size":772,"mtime":1610965227295,"results":"11","hashOfConfig":"9"},{"size":727,"mtime":1610965359945,"results":"12","hashOfConfig":"9"},{"size":141,"mtime":1610955392124,"results":"13","hashOfConfig":"9"},{"size":567,"mtime":1610955342168,"results":"14","hashOfConfig":"9"},{"size":1454,"mtime":1610965362057,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ztzqd2",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"/home/vitaliy/work/react-redux-typescript/src/index.tsx",[],"/home/vitaliy/work/react-redux-typescript/src/reducers/notesReducer.ts",[],"/home/vitaliy/work/react-redux-typescript/src/components/App.tsx",[],"/home/vitaliy/work/react-redux-typescript/src/components/NewNoteInput.tsx",[],"/home/vitaliy/work/react-redux-typescript/src/containers/store.ts",[],"/home/vitaliy/work/react-redux-typescript/src/actions/notes.ts",[],"/home/vitaliy/work/react-redux-typescript/src/components/Note.tsx",["31","32"],"import React, { ChangeEvent } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateNote, deleteNote } from '../actions/notes';\n\ninterface noteProps {\n    note: string;\n    index: number;\n}\n\nexport const Note = ({ note, index }:noteProps) => {\n    const [currentNote, setNote] = React.useState(note);\n    const [editable, setEditable] = React.useState(false);\n    const dispatch = useDispatch();\n\n    const onUpdateNote = (event:ChangeEvent<HTMLInputElement>) => {\n        setNote(event.target.value);\n    }\n\n    const onDeleteNote = () => { dispatch(deleteNote(index)) }\n\n    const onBlurNote = () => {\n        setEditable(false);\n        if (currentNote) {\n            dispatch(updateNote(currentNote, index));\n        } else {\n            dispatch(deleteNote(index))\n        }\n    }\n\n    const onCLickNote = () => { setEditable(true); }\n\n    return (\n        <div className=\"note-flexbox-container\">\n            {\n                editable\n                && <input\n                        onChange={onUpdateNote}\n                        onBlur={onBlurNote}\n                        value={currentNote}\n                        type=\"text\"\n                        autoFocus\n                    />\n                || <li\n                    onClick={onCLickNote}\n                    key={note}\n                > {note} </li>\n            }\n            <input type=\"submit\" value=\"delete\" onClick={onDeleteNote} />\n        </div>\n    );\n}\n",{"ruleId":"33","severity":1,"message":"34","line":36,"column":17,"nodeType":"35","messageId":"36","endLine":36,"endColumn":19},{"ruleId":"33","severity":1,"message":"34","line":43,"column":17,"nodeType":"35","messageId":"36","endLine":43,"endColumn":19},"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator"]